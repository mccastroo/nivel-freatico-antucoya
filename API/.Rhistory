import pandas as pd
import numpy as np
from sqlalchemy import create_engine
from datetime import datetime, timedelta
from dateutil import tz
# Parámetros de conexión a Jigsaw
jigsaw_user_nam = "mpineda"            #Nombre de usuario
jigsaw_user_pwd = "$Antucoya2022$"     #Contraseña usuario
jigsaw_server_add = "10.16.200.248"    #Servidor
# Parámetros de conexión
modulos_user_nam = "cprades"        #Nombre de usuario
modulos_user_pwd = "Antucoya2020$"  #Contraseña usuario
modulos_server_add = "10.16.200.14" #Servidor
# Creación conexion a servidores
jigsaw_engine = create_engine('mssql+pymssql://' + jigsaw_user_nam + ':' + jigsaw_user_pwd + '@' + jigsaw_server_add)
modulos_engine = create_engine('mssql+pymssql://' + modulos_user_nam + ':' + modulos_user_pwd + '@' + modulos_server_add)
# Zonas horarias para pulir datos de apilamiento
## Los datos de jigsaw están en UTC. Las fechas de los módulos están en el horario de America/Santiago
from_zone = tz.gettz('America/Santiago')
to_zone = tz.gettz('UTC')
# Tiempo hasta que el contenido de un bloque debiese llegar por completo
tiempo_descarga_apilado_horas = 1.25
#Consulta a realizar por Módulos
query_modulos = "SELECT TOP 10 * FROM [pi_temp].[dbo].[bene_diario_modulos] ORDER BY ini_apil DESC"
#Descarga datos de la consulta
modulos_table = pd.read_sql(query_modulos, modulos_engine)
modulos_table
query_modulos = "SELECT TOP 200 * FROM [pi_temp].[dbo].[bene_diario_modulos] ORDER BY ini_apil DESC"
modulos_table = pd.read_sql(query_modulos, modulos_engine)
import pandas as pd
import numpy as np
from config import settings
from sqlalchemy import create_engine
from datetime import datetime, timedelta
from dateutil import tz
import pandas as pd
import numpy as np
from config import settings
from sqlalchemy import create_engine
from datetime import datetime, timedelta
from dateutil import tz
from azure.storage.blob import BlobServiceClient
help('modules')
import pkg_resources
installed_packages = pkg_resources.working_set
installed_packages_list = sorted(["%s==%s" % (i.key, i.version)
for i in installed_packages])
print(installed_packages_list)
library(dplyr)
library(lubridate)
grades_names <- c(
'TON', 'CUT', 'CUS', 'NO3', 'CO3', 'MENA1', 'CAL1',
'IQS1', 'ACIDO', 'MENA2', 'MENA3', 'CAL2', 'CAL3', 'CAL4', 'IQS2', 'IQS3',
'IQS4',	'UGM_NIR', 'SZO', 'CAO', 'PGL', 'CHL', 'SER', 'QZ', 'FEO', 'CAL', 'YES'
)
datos_camiones <- readr::read_csv(file = 'Data/camiones_ANT.csv')
datos_grades <- readr::read_csv(file = 'Data/grades_qualities_ANT.csv') %>%
dplyr::select(grade_id, start_date, qualities) %>%
tidyr::separate(qualities, grades_names, sep = ',')
datos_finales_camiones <- datos_camiones %>%
dplyr::left_join(datos_grades, by = 'grade_id') %>%
dplyr::group_by(id, grade_id) %>%
dplyr::filter(start_date <= time_full) %>%
dplyr::arrange(start_date) %>%
dplyr::slice_tail(n = 1) %>%
dplyr::ungroup()
datos_finales_camiones
View(datos_finales_camiones)
datos_finales_camiones <- datos_camiones %>%
dplyr::left_join(datos_grades, by = 'grade_id') %>%
dplyr::group_by(id, grade_id) %>%
dplyr::filter(start_date <= time_full) %>%
dplyr::arrange(start_date) %>%
dplyr::slice_tail(n = 1) %>%
dplyr::ungroup() %>%
dplyr::filter(time >= lubridate::ymd('2020-01-01'), dump == 'CHANCADO', UGM %in% c(10, 20, 21, 24, 30, 40))
datos_finales_camiones <- datos_camiones %>%
dplyr::left_join(datos_grades, by = 'grade_id') %>%
dplyr::group_by(id, grade_id) %>%
dplyr::filter(start_date <= time_full) %>%
dplyr::arrange(start_date) %>%
dplyr::slice_tail(n = 1) %>%
dplyr::ungroup() %>%
dplyr::rename('UGM' = 'UGM_NIR') %>%
dplyr::filter(time >= lubridate::ymd('2020-01-01'), dump == 'CHANCADO', UGM %in% c(10, 20, 21, 24, 30, 40))
datos_finales_camiones
datos_finales_camiones <- datos_camiones %>%
dplyr::left_join(datos_grades, by = 'grade_id') %>%
dplyr::group_by(id, grade_id) %>%
dplyr::filter(start_date <= time_full) %>%
dplyr::arrange(start_date) %>%
dplyr::slice_tail(n = 1) %>%
dplyr::ungroup() %>%
dplyr::rename('UGM' = 'UGM_NIR')
datos_finales_camiones
View(datos_finales_camiones)
datos_finales_camiones %>%
dplyr::select(UGM)
datos_finales_camiones <- datos_camiones %>%
dplyr::left_join(datos_grades, by = 'grade_id') %>%
dplyr::group_by(id, grade_id) %>%
dplyr::filter(start_date <= time_full) %>%
dplyr::arrange(start_date) %>%
dplyr::slice_tail(n = 1) %>%
dplyr::ungroup() %>%
dplyr::rename('UGM' = 'UGM_NIR') %>%
dplyr::mutate(UGM = as.numeric(UGM)) %>%
dplyr::filter(time >= lubridate::ymd('2020-01-01'), dump == 'CHANCADO', UGM %in% c(10, 20, 21, 24, 30, 40))
folds <- 12
variablesNumericas <- c('SZO', 'CAO', 'PGL', 'CHL', 'ACIDO', 'SER', 'QZ', 'FEO', 'YES')
FoldsVarsNumericos <- datos_finales_camiones %>%
dplyr::select(Modulo, variablesNumericas) %>%
dplyr::group_by(Modulo) %>%
dplyr::mutate(ID = 1:dplyr::n(), .after = Modulo) %>%
dplyr::mutate() %>%
dplyr::mutate(G = ceiling(ID/dplyr::n()*folds), .after = ID) %>%
dplyr::ungroup() %>%
tidyr::pivot_longer(cols = variablesNumericas, names_to = 'Medicion', values_to = 'Valor') %>%
dplyr::filter(Valor >= 0) %>%
dplyr::select(-ID) %>%
dplyr::group_by(Modulo, G, Medicion) %>%
dplyr::summarise_all(
.funs = list(
minimo = min,
maximo = max,
mediana = median,
promedio = mean,
desviacion = sd,
varianza = var
)
) %>%
dplyr::ungroup() %>%
tidyr::pivot_wider(
names_from = c(G, Medicion),
names_sep = '_',
values_from = c('minimo', 'promedio', 'mediana', 'desviacion', 'varianza', 'maximo'),
names_prefix = 'Fold'
)
datos_finales_camiones <- datos_camiones %>%
dplyr::left_join(datos_grades, by = 'grade_id') %>%
dplyr::group_by(id, grade_id) %>%
dplyr::filter(start_date <= time_full) %>%
dplyr::arrange(start_date) %>%
dplyr::slice_tail(n = 1) %>%
dplyr::ungroup() %>%
dplyr::rename('UGM' = 'UGM_NIR') %>%
dplyr::mutate(UGM = as.numeric(UGM)) %>%
dplyr::mutate_at(variablesNumericas, .funs = ~as.numeric(.x)) %>%
dplyr::filter(time >= lubridate::ymd('2020-01-01'), dump == 'CHANCADO', UGM %in% c(10, 20, 21, 24, 30, 40))
FoldsVarsNumericos <- datos_finales_camiones %>%
dplyr::select(Modulo, variablesNumericas) %>%
dplyr::group_by(Modulo) %>%
dplyr::mutate(ID = 1:dplyr::n(), .after = Modulo) %>%
dplyr::mutate() %>%
dplyr::mutate(G = ceiling(ID/dplyr::n()*folds), .after = ID) %>%
dplyr::ungroup() %>%
tidyr::pivot_longer(cols = variablesNumericas, names_to = 'Medicion', values_to = 'Valor') %>%
dplyr::filter(Valor >= 0) %>%
dplyr::select(-ID) %>%
dplyr::group_by(Modulo, G, Medicion) %>%
dplyr::summarise_all(
.funs = list(
minimo = min,
maximo = max,
mediana = median,
promedio = mean,
desviacion = sd,
varianza = var
)
) %>%
dplyr::ungroup() %>%
tidyr::pivot_wider(
names_from = c(G, Medicion),
names_sep = '_',
values_from = c('minimo', 'promedio', 'mediana', 'desviacion', 'varianza', 'maximo'),
names_prefix = 'Fold'
)
ModuloVarsNumericos <- datos_finales_camiones %>%
dplyr::select(Modulo, variablesNumericas) %>%
tidyr::pivot_longer(cols = variablesNumericas, names_to = 'Medicion', values_to = 'Valor') %>%
dplyr::filter(Valor >= 0) %>%
dplyr::group_by(Modulo, Medicion) %>%
dplyr::summarise_all(
.funs = list(
minimo = min,
maximo = max,
mediana = median,
promedio = mean,
desviacion = sd,
varianza = var
)
) %>%
dplyr::ungroup() %>%
tidyr::pivot_wider(
names_from = Medicion,
names_sep = '_',
values_from = c('minimo', 'promedio', 'mediana', 'desviacion', 'varianza', 'maximo')
)
UGM_modulo_separacion <- datos_finales_camiones %>%
dplyr::group_by(Modulo) %>%
dplyr::mutate(ID = 1:dplyr::n()) %>%
dplyr::mutate(G = ceiling(ID/dplyr::n()*folds), .after = Modulo) %>%
dplyr::ungroup() %>%
dplyr::group_by(Modulo, G, UGM) %>%
dplyr::summarise(N = dplyr::n()) %>%
dplyr::ungroup(UGM) %>%
dplyr::mutate(P = N/sum(N)) %>%
dplyr::ungroup() %>%
dplyr::select(-N) %>%
tidyr::pivot_wider(names_from = c('UGM', 'G'),  names_glue = '{G}_UGM_{UGM}', values_from = 'P', names_sort = TRUE)  %>%
base::replace(is.na(.), 0)
UGM_modulo_estadisticos <- datos_finales_camiones %>%
tidyr::pivot_longer(cols = -Modulo, values_to = 'Porcentaje') %>%
tidyr::separate(name, sep = "_", into = c("Fold", "H", "UGM")) %>%
dplyr::select(-H) %>%
dplyr::group_by(Modulo, UGM) %>%
dplyr::summarise(
minimo = min(Porcentaje),
promedio = mean(Porcentaje),
mediana = median(Porcentaje),
desviacion = sd(Porcentaje),
varianza = var(Porcentaje),
maximo = max(Porcentaje)
) %>%
dplyr::ungroup() %>%
tidyr::pivot_wider(
names_from = UGM,
names_sep = '_UGM_',
values_from = c('minimo', 'promedio', 'mediana', 'desviacion', 'varianza', 'maximo')
)
datos_finales_camiones
library(dplyr)
library(lubridate)
grades_names <- c(
'TON', 'CUT', 'CUS', 'NO3', 'CO3', 'MENA1', 'CAL1',
'IQS1', 'ACIDO', 'MENA2', 'MENA3', 'CAL2', 'CAL3', 'CAL4', 'IQS2', 'IQS3',
'IQS4',	'UGM_NIR', 'SZO', 'CAO', 'PGL', 'CHL', 'SER', 'QZ', 'FEO', 'CAL', 'YES'
)
folds <- 12
variablesNumericas <- c('SZO', 'CAO', 'PGL', 'CHL', 'ACIDO', 'SER', 'QZ', 'FEO', 'YES')
datos_camiones <- readr::read_csv(file = 'Data/camiones_ANT.csv')
datos_grades <- readr::read_csv(file = 'Data/grades_qualities_ANT.csv') %>%
dplyr::select(grade_id, start_date, qualities) %>%
tidyr::separate(qualities, grades_names, sep = ',')
datos_camiones
datos_grades <- readr::read_csv(file = 'Data/grades_qualities_ANT.csv') %>%
dplyr::select(grade_id, start_date, qualities) %>%
tidyr::separate(qualities, grades_names, sep = ',')
datos_finales_camiones <- datos_camiones %>%
dplyr::left_join(datos_grades, by = 'grade_id') %>%
dplyr::group_by(id, grade_id) %>%
dplyr::filter(start_date <= time_full) %>%
dplyr::arrange(start_date) %>%
dplyr::slice_tail(n = 1) %>%
dplyr::ungroup() %>%
dplyr::rename('UGM' = 'UGM_NIR') %>%
dplyr::mutate(UGM = as.numeric(UGM)) %>%
dplyr::mutate_at(variablesNumericas, .funs = ~as.numeric(.x)) %>%
dplyr::filter(time >= lubridate::ymd('2020-01-01'), dump == 'CHANCADO', UGM %in% c(10, 20, 21, 24, 30, 40))
FoldsVarsNumericos <- datos_finales_camiones %>%
dplyr::select(id_mod, variablesNumericas) %>%
dplyr::group_by(id_mod) %>%
dplyr::mutate(ID = 1:dplyr::n(), .after = Modulo) %>%
dplyr::mutate() %>%
dplyr::mutate(G = ceiling(ID/dplyr::n()*folds), .after = ID) %>%
dplyr::ungroup() %>%
tidyr::pivot_longer(cols = variablesNumericas, names_to = 'Medicion', values_to = 'Valor') %>%
dplyr::filter(Valor >= 0) %>%
dplyr::select(-ID) %>%
dplyr::group_by(Modulo, G, Medicion) %>%
dplyr::summarise_all(
.funs = list(
minimo = min,
maximo = max,
mediana = median,
promedio = mean,
desviacion = sd,
varianza = var
)
) %>%
dplyr::ungroup() %>%
tidyr::pivot_wider(
names_from = c(G, Medicion),
names_sep = '_',
values_from = c('minimo', 'promedio', 'mediana', 'desviacion', 'varianza', 'maximo'),
names_prefix = 'Fold'
)
FoldsVarsNumericos <- datos_finales_camiones %>%
dplyr::select(id_mod, variablesNumericas) %>%
dplyr::group_by(id_mod) %>%
dplyr::mutate(ID = 1:dplyr::n(), .after = Modulo) %>%
dplyr::mutate() %>%
dplyr::mutate(G = ceiling(ID/dplyr::n()*folds), .after = ID) %>%
dplyr::ungroup() %>%
tidyr::pivot_longer(cols = variablesNumericas, names_to = 'Medicion', values_to = 'Valor') %>%
dplyr::filter(Valor >= 0) %>%
dplyr::select(-ID) %>%
dplyr::group_by(id_mod, G, Medicion) %>%
dplyr::summarise_all(
.funs = list(
minimo = min,
maximo = max,
mediana = median,
promedio = mean,
desviacion = sd,
varianza = var
)
) %>%
dplyr::ungroup() %>%
tidyr::pivot_wider(
names_from = c(G, Medicion),
names_sep = '_',
values_from = c('minimo', 'promedio', 'mediana', 'desviacion', 'varianza', 'maximo'),
names_prefix = 'Fold'
)
FoldsVarsNumericos <- datos_finales_camiones %>%
dplyr::select(id_mod, variablesNumericas) %>%
dplyr::group_by(id_mod) %>%
dplyr::mutate(ID = 1:dplyr::n(), .after = id_mod) %>%
dplyr::mutate() %>%
dplyr::mutate(G = ceiling(ID/dplyr::n()*folds), .after = ID) %>%
dplyr::ungroup() %>%
tidyr::pivot_longer(cols = variablesNumericas, names_to = 'Medicion', values_to = 'Valor') %>%
dplyr::filter(Valor >= 0) %>%
dplyr::select(-ID) %>%
dplyr::group_by(id_mod, G, Medicion) %>%
dplyr::summarise_all(
.funs = list(
minimo = min,
maximo = max,
mediana = median,
promedio = mean,
desviacion = sd,
varianza = var
)
) %>%
dplyr::ungroup() %>%
tidyr::pivot_wider(
names_from = c(G, Medicion),
names_sep = '_',
values_from = c('minimo', 'promedio', 'mediana', 'desviacion', 'varianza', 'maximo'),
names_prefix = 'Fold'
)
ModuloVarsNumericos <- datos_finales_camiones %>%
dplyr::select(id_mod, variablesNumericas) %>%
tidyr::pivot_longer(cols = variablesNumericas, names_to = 'Medicion', values_to = 'Valor') %>%
dplyr::filter(Valor >= 0) %>%
dplyr::group_by(id_mod, Medicion) %>%
dplyr::summarise_all(
.funs = list(
minimo = min,
maximo = max,
mediana = median,
promedio = mean,
desviacion = sd,
varianza = var
)
) %>%
dplyr::ungroup() %>%
tidyr::pivot_wider(
names_from = Medicion,
names_sep = '_',
values_from = c('minimo', 'promedio', 'mediana', 'desviacion', 'varianza', 'maximo')
)
UGM_modulo_separacion <- datos_finales_camiones %>%
dplyr::group_by(id_mod) %>%
dplyr::mutate(ID = 1:dplyr::n()) %>%
dplyr::mutate(G = ceiling(ID/dplyr::n()*folds), .after = id_mod) %>%
dplyr::ungroup() %>%
dplyr::group_by(Modulo, G, UGM) %>%
dplyr::summarise(N = dplyr::n()) %>%
dplyr::ungroup(UGM) %>%
dplyr::mutate(P = N/sum(N)) %>%
dplyr::ungroup() %>%
dplyr::select(-N) %>%
tidyr::pivot_wider(names_from = c('UGM', 'G'),  names_glue = '{G}_UGM_{UGM}', values_from = 'P', names_sort = TRUE)  %>%
base::replace(is.na(.), 0)
UGM_modulo_separacion <- datos_finales_camiones %>%
dplyr::group_by(id_mod) %>%
dplyr::mutate(ID = 1:dplyr::n()) %>%
dplyr::mutate(G = ceiling(ID/dplyr::n()*folds), .after = id_mod) %>%
dplyr::ungroup() %>%
dplyr::group_by(id_mod, G, UGM) %>%
dplyr::summarise(N = dplyr::n()) %>%
dplyr::ungroup(UGM) %>%
dplyr::mutate(P = N/sum(N)) %>%
dplyr::ungroup() %>%
dplyr::select(-N) %>%
tidyr::pivot_wider(names_from = c('UGM', 'G'),  names_glue = '{G}_UGM_{UGM}', values_from = 'P', names_sort = TRUE)  %>%
base::replace(is.na(.), 0)
UGM_modulo_separacion
UGM_modulo_estadisticos <- datos_finales_camiones %>%
tidyr::pivot_longer(cols = -id_mod, values_to = 'Porcentaje') %>%
tidyr::separate(name, sep = "_", into = c("Fold", "H", "UGM")) %>%
dplyr::select(-H) %>%
dplyr::group_by(id_mod, UGM) %>%
dplyr::summarise(
minimo = min(Porcentaje),
promedio = mean(Porcentaje),
mediana = median(Porcentaje),
desviacion = sd(Porcentaje),
varianza = var(Porcentaje),
maximo = max(Porcentaje)
) %>%
dplyr::ungroup() %>%
tidyr::pivot_wider(
names_from = UGM,
names_sep = '_UGM_',
values_from = c('minimo', 'promedio', 'mediana', 'desviacion', 'varianza', 'maximo')
)
UGM_modulo_estadisticos
datos_finales_camiones
UGM_modulo_estadisticos <- UGM_modulo_separacion %>%
tidyr::pivot_longer(cols = -id_mod, values_to = 'Porcentaje') %>%
tidyr::separate(name, sep = "_", into = c("Fold", "H", "UGM")) %>%
dplyr::select(-H) %>%
dplyr::group_by(id_mod, UGM) %>%
dplyr::summarise(
minimo = min(Porcentaje),
promedio = mean(Porcentaje),
mediana = median(Porcentaje),
desviacion = sd(Porcentaje),
varianza = var(Porcentaje),
maximo = max(Porcentaje)
) %>%
dplyr::ungroup() %>%
tidyr::pivot_wider(
names_from = UGM,
names_sep = '_UGM_',
values_from = c('minimo', 'promedio', 'mediana', 'desviacion', 'varianza', 'maximo')
)
UGM_modulo_estadisticos
UGM_modulo_general <- datos_finales_camiones %>%
dplyr::group_by(id_mod, UGM) %>%
dplyr::summarise(N = dplyr::n()) %>%
dplyr::ungroup(UGM) %>%
dplyr::mutate(P = N/sum(N)) %>%
dplyr::ungroup() %>%
dplyr::select(-N) %>%
tidyr::pivot_wider(names_from = UGM, values_from = P, names_prefix = 'O_UGM_') %>%
base::replace(is.na(.), 0)
variablesJigsaw <- datosApilamiento %>%
dplyr::relocate(Modulo, .before = 1) %>%
dplyr::inner_join(UGM_modulo_general, by = 'id_mod') %>%
dplyr::inner_join(UGM_modulo_estadisticos, by = 'id_mod') %>%
dplyr::inner_join(ModuloVarsNumericos, by = 'id_mod') %>%
dplyr::inner_join(FoldsVarsNumericos, by = 'id_mod')
variablesJigsaw <- UGM_modulo_general %>%
dplyr::inner_join(UGM_modulo_estadisticos, by = 'id_mod') %>%
dplyr::inner_join(ModuloVarsNumericos, by = 'id_mod') %>%
dplyr::inner_join(FoldsVarsNumericos, by = 'id_mod')
variablesJigsaw
variablesJigsaw
plumber::plumb(file='variables_jigsaw/plumber.R')$run()
plumb(file='variables_jigsaw/plumber.R')$run()
plumb(file='variables_jigsaw/plumber.R')$run()
plumb(file='variables_jigsaw/plumber.R')$run()
plumb(file='variables_jigsaw/plumber.R')$run()
setwd("~/Desktop/nivel-freatico-antucoya")
setwd("~/Desktop/nivel-freatico-antucoya/API")
